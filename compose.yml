services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - book-library-network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "19090:19090"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://:9090,EXTERNAL://:19090
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9090,EXTERNAL://localhost:19090
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_JMX_PORT: 9997
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - book-library-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8083:8080"
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - book-library-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: book_library_db
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_user
    ports:
      - '5432:5432'
    networks:
      - book-library-network

#  book-library:
#    build:
#      context: ./BookLibraryV2
#      dockerfile: Dockerfile
#    ports:
#      - '8080:8080'
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - book-library-network
#
#  subscribing-service:
#    build:
#      context: ./SubscribingService
#      dockerfile: Dockerfile
#    ports:
#      - '8082:8080'
#    depends_on:
#      - book-library
#    networks:
#      - book-library-network

networks:
  book-library-network:
    driver: bridge